/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#include "acutes.h"
#include "layers.h"
#include "punctuation_en.h"

#define TIMEOUT_MS    50

// Left Side
#define TIL  3 // Top Index finger Left
#define TML  2
#define HIL 13 // Home Index Left
#define HML 12
#define HRL 11
#define HPL 10
#define BIL 23 // Bottom Index Left
#define BML 22
#define BRL 21
#define BPL 20
#define OTL 32 // Outer Thumb Left
#define ITL 31 // Inner Thumb Left

// Right Side
#define TIR  6 // Top Index finger Right
#define TMR  7
#define HIR 16 // Home Index Right
#define HMR 17
#define HRR 18
#define HPR 19
#define BIR 26 // Bottom Index Right
#define BMR 27
#define BRR 28
#define BPR 29
#define OTR 37 // Outer Thumb Right
#define ITR 38 // Inner Thumb Right

#define TAIPO_WEN_COMBO(NAME, BINDINGS, OUTER_BINDINGS, INNER_BINDINGS, LEFT_KEYPOS, RIGHT_KEYPOS) \
combo_l_##NAME { \
	timeout-ms = <TIMEOUT_MS>; \
	bindings = <BINDINGS>; \
	key-positions = <LEFT_KEYPOS>; \
	layers = <WEN_TAIPO>; \
}; \
combo_li_##NAME { \
	timeout-ms = <TIMEOUT_MS>; \
	bindings = <INNER_BINDINGS>; \
	key-positions = <LEFT_KEYPOS ITL>; \
	layers = <WEN_TAIPO>; \
}; \
combo_lo_##NAME { \
	timeout-ms = <TIMEOUT_MS>; \
	bindings = <OUTER_BINDINGS>; \
	key-positions = <LEFT_KEYPOS OTL>; \
	layers = <WEN_TAIPO>; \
}; \
combo_r_##NAME { \
	timeout-ms = <TIMEOUT_MS>; \
	bindings = <BINDINGS>; \
	key-positions = <RIGHT_KEYPOS>; \
	layers = <WEN_TAIPO>; \
}; \
combo_ri_##NAME { \
	timeout-ms = <TIMEOUT_MS>; \
	bindings = <INNER_BINDINGS>; \
	key-positions = <RIGHT_KEYPOS ITR>; \
	layers = <WEN_TAIPO>; \
}; \
combo_ro_##NAME { \
	timeout-ms = <TIMEOUT_MS>; \
	bindings = <OUTER_BINDINGS>; \
	key-positions = <RIGHT_KEYPOS OTR>; \
	layers = <WEN_TAIPO>; \
};

/ {
    behaviors {
      skq: sticky_key_quick_release {
        compatible = "zmk,behavior-sticky-key";
        label = "STICKY_KEY_QUICK_RELEASE";
        #binding-cells = <1>;
        bindings = <&kp>;
        release-after-ms = <1000>;
        quick-release;
        ignore-modifiers;
      };
    };

    combos {
        compatible = "zmk,combos";

        combo_l_space { \
        	timeout-ms = <TIMEOUT_MS>; \
        	bindings = <&kp SPACE>; \
        	key-positions = <OTL>; \
        	layers = <WEN_TAIPO>; \
        };
        
        combo_r_space { \
        	timeout-ms = <TIMEOUT_MS>; \
        	bindings = <&kp SPACE>; \
        	key-positions = <OTR>; \
        	layers = <WEN_TAIPO>; \
        };
        
        combo_l_bspc { \
        	timeout-ms = <TIMEOUT_MS>; \
        	bindings = <&kp BSPC>; \
        	key-positions = <ITL>; \
        	layers = <WEN_TAIPO>; \
        };
        
        combo_r_bspc { \
        	timeout-ms = <TIMEOUT_MS>; \
        	bindings = <&kp BSPC>; \
        	key-positions = <ITR>; \
        	layers = <WEN_TAIPO>; \
        };

        TAIPO_WEN_COMBO(R, &kp R, &kp GT,   &kp LS(R), HPL, HPR)
        TAIPO_WEN_COMBO(S, &kp S, &kp RBRC, &kp LS(S), HRL, HRR)
        TAIPO_WEN_COMBO(N, &kp N, &kp RBKT, &kp LS(N), HML, HMR)
        TAIPO_WEN_COMBO(I, &kp I, &kp RPAR, &kp LS(I), HIL, HIR)
        TAIPO_WEN_COMBO(A, &kp A, &kp LT,   &kp LS(A), BPL, BPR)
        TAIPO_WEN_COMBO(O, &kp O, &kp LBRC, &kp LS(O), BRL, BRR)
        TAIPO_WEN_COMBO(T, &kp T, &kp LBKT, &kp LS(T), BML, BMR)
        TAIPO_WEN_COMBO(E, &kp E, &kp LPAR, &kp LS(E), BIL, BIR)
        
        TAIPO_WEN_COMBO(B,     &kp B,     &kp N9,     &kp LS(B), HPL HRL, HPR HRR)
        TAIPO_WEN_COMBO(Y,     &kp Y,     &kp N5,     &kp LS(Y), HML HIL, HMR HIR)
        TAIPO_WEN_COMBO(L,     &kp L,     &kp N4,     &kp LS(L), BPL BRL, BPR BRR)
        TAIPO_WEN_COMBO(H,     &kp H,     &kp N0,     &kp LS(H), BML BIL, BMR BIR)
        TAIPO_WEN_COMBO(P,     &kp P,     &kp N7,     &kp LS(P), HRL HML, HRR HMR)
        TAIPO_WEN_COMBO(U,     &kp U,     &kp N2,     &kp LS(U), BRL BML, BRR BMR)
        TAIPO_WEN_COMBO(G,     &kp G,     &kp HASH,   &kp LS(G), HPL HIL, HPR HIR)
        TAIPO_WEN_COMBO(D,     &kp D,     &kp AT,     &kp LS(D), BPL BIL, BPR BIR)
        TAIPO_WEN_COMBO(Z,     &kp Z,     &kp N8,     &kp LS(Z), HPL HML, HPR HMR)
        TAIPO_WEN_COMBO(F,     &kp F,     &kp N6,     &kp LS(F), HRL HIL, HRR HIR)
        TAIPO_WEN_COMBO(Q,     &kp Q,     &kp N3,     &kp LS(Q), BPL BML, BPR BMR)        
        TAIPO_WEN_COMBO(C,     &kp C,     &kp N1,     &kp LS(C), BRL BIL, BRR BIR)
        TAIPO_WEN_COMBO(X,     &kp X,     &kp CARET,  &kp LS(X), HPL BML, HPR BMR)
        TAIPO_WEN_COMBO(K,     &kp K,     &kp PLUS,   &kp LS(K), HIL BRL, HIR BRR)
        TAIPO_WEN_COMBO(V,     &kp V,     &kp STAR,   &kp LS(V), HRL BIL, HRR BIR)
        TAIPO_WEN_COMBO(J,     &kp J,     &kp EQUAL,  &kp LS(J), HML BPL, HMR BPR)
        TAIPO_WEN_COMBO(M,     &kp M,     &kp DOLLAR, &kp LS(M), HPL BIL, HPR BIR)
        TAIPO_WEN_COMBO(W,     &kp W,     &kp AMPS,   &kp LS(W), HIL BPL, HIR BPR)
        TAIPO_WEN_COMBO(SLASH, &kp SLASH, &kp PIPE,   &kp BSLH,  HRL BML, HRR BMR)
        TAIPO_WEN_COMBO(MINUS, &kp MINUS, &kp PRCNT,  &kp UNDER, HML BRL, HMR BRR)
        TAIPO_WEN_COMBO(SEMI,  &kp SEMI,  &none,      &kp COLON, HPL BRL, HPR BRR)        
        TAIPO_WEN_COMBO(QMARK, &kp QMARK, &none,      &kp EXCL,  HIL BML, HIR BMR)
        TAIPO_WEN_COMBO(COMMA, &kp COMMA, &kp TILDE,  &kp DOT,   HML BIL, HMR BIR)
        TAIPO_WEN_COMBO(SQT,   &kp SQT,   &kp GRAVE,  &kp DQT,   HRL BPL, HRR BPR)
        
        TAIPO_WEN_COMBO(LGUI,   &sk LGUI,   &kp PGUP, &kp RIGHT, HPL BPL, HPR BPR)
        TAIPO_WEN_COMBO(LALT,   &sk LALT,   &kp HOME, &kp UP,    HRL BRL, HRR BRR)
        TAIPO_WEN_COMBO(LSHIFT, &sk LSHIFT, &kp PGDN, &kp LEFT,  HIL BIL, HIR BIR)
        TAIPO_WEN_COMBO(LCTRL,  &sk LCTRL,  &kp END,  &kp DOWN,  HML BML, HMR BMR)

        TAIPO_WEN_COMBO(TAB,   &kp TAB,   &kp INS,  &kp DEL, HRL HML HIL, HRR HMR HIR)
        TAIPO_WEN_COMBO(ENTER, &kp ENTER, &kp LALT, &kp ESC, BRL BML BIL, BRR BMR BIR)
        
        TAIPO_WEN_COMBO(TO_WEN, &to WEN_BASE, &none, &none, HPL HRL HML, HPR HRR HMR)
        
        combo_shft_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <37 16>;
            bindings = <&skq LSHFT>;
            layers = <WEN_LAYER_SET>;
        };
        combo_shft_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <32 13>;
            bindings = <&skq LSHFT>;
            layers = <WEN_LAYER_SET>;
        };
        combo_ctrl_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <37 17>;
            bindings = <&skq LCTRL>;
            layers = <WEN_LAYER_SET>;
        };
        combo_ctrl_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <32 12>;
            bindings = <&skq LCTRL>;
            layers = <WEN_LAYER_SET>;
        };
        combo_alt_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <37 18>;
            bindings = <&skq LALT>;
            layers = <WEN_LAYER_SET>;
        };
        combo_alt_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <32 11>;
            bindings = <&skq LALT>;
            layers = <WEN_LAYER_SET>;
        };
        combo_gui_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <37 19>;
            bindings = <&skq LGUI>;
            layers = <WEN_LAYER_SET>;
        };
        combo_gui_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <32 10>;
            bindings = <&skq LGUI>;
            layers = <WEN_LAYER_SET>;
        };

        combo_to_wen_base_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <31 13>;
            bindings = <&to WEN_BASE>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_base_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <38 16>;
            bindings = <&to WEN_BASE>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_nav_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <31 12>;
            bindings = <&to WEN_NAV>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_nav_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <38 17>;
            bindings = <&to WEN_NAV>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_num_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <31 11>;
            bindings = <&to WEN_NUM>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_num_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <38 18>;
            bindings = <&to WEN_NUM>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_sym_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <31 10>;
            bindings = <&to WEN_SYM>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_sym_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <38 19>;
            bindings = <&to WEN_SYM>;
            layers = <WEN_LAYER_SET>;
        };

        combo_to_wen_diaresis_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <31 23>;
            bindings = <&to WEN_DL>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_diaresis_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <38 26>;
            bindings = <&to WEN_DL>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_acute_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <31 22>;
            bindings = <&to WEN_AL>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_acute_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <38 27>;
            bindings = <&to WEN_AL>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_dacute_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <31 21>;
            bindings = <&to WEN_DAL>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_dacute_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <38 28>;
            bindings = <&to WEN_DAL>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_func_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <31 20>;
            bindings = <&to WEN_FUNC>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_func_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <38 29>;
            bindings = <&to WEN_FUNC>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_taipo_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <31 02>;
            bindings = <&to WEN_TAIPO>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_wen_taipo_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <38 07>;
            bindings = <&to WEN_TAIPO>;
            layers = <WEN_LAYER_SET>;
        };
        
        combo_to_whu_base {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <37 29>;
            bindings = <&to WHU_BASE>;
            layers = <WEN_LAYER_SET>;
        };
        combo_to_mhu_base {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <32 20>;
            bindings = <&to MHU_BASE>;
            layers = <WEN_LAYER_SET>;
        };
        
        combo_enter_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <21 22 23>;
            bindings = <&kp RET>;
            layers = <WEN_LAYER_SET>;
        };
        combo_enter_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <26 27 28>;
            bindings = <&kp RET>;
            layers = <WEN_LAYER_SET>;
        };
        combo_tab_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <11 12 13>;
            bindings = <&kp TAB>;
            layers = <WEN_LAYER_SET>;
        };
        combo_tab_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <16 17 18>;
            bindings = <&kp TAB>;
            layers = <WEN_LAYER_SET>;
        };
        combo_esc_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <31 21 22 23>;
            bindings = <&kp ESC>;
            layers = <WEN_LAYER_SET>;
        };
        combo_esc_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <38 26 27 28>;
            bindings = <&kp ESC>;
            layers = <WEN_LAYER_SET>;
        };
        combo_del_left {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <31 11 12 13>;
            bindings = <&kp DEL>;
            layers = <WEN_LAYER_SET>;
        };
        combo_del_right {
            timeout-ms = <TIMEOUT_MS>;
            key-positions = <38 16 17 18>;
            bindings = <&kp DEL>;
            layers = <WEN_LAYER_SET>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        wen_base_layer {
// COLEMAK-DH
            bindings = <
    &kp Q   &kp W        &kp F      &kp P     &kp B           &kp J   &kp L      &kp U        &kp Y       &kp SQT
    &kp A   &kp R        &kp S      &kp T     &kp G           &kp M   &kp N      &kp E        &kp I       &kp O
    &kp Z   &kp X        &kp C      &kp D     &kp V           &kp K   &kp H      &comma_lpar  &dot_rpar   &kp FSLH
    &kp N1  &key_repeat  &kp SPACE  &kp SEMI  &kp N2          &kp N3  &kp MINUS  &kp BSPC     &star_excl  &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        wen_nav_layer {
// WEN_NAV
            bindings = <
    &none     &none        &kp K_APP    &none         &kp KP_NUMLOCK          &kp INS       &none      &none      &none       &none
    &kp LGUI  &kp LALT     &kp LCTRL    &kp LSHFT     &caps_word              &kp CAPS      &kp LEFT   &kp DOWN   &kp UP      &kp RIGHT
    &m_undo   &m_cut_wen   &m_copy_wen  &m_paste_wen  &m_again_wen            &kp LC(BSPC)  &kp HOME   &kp PG_DN  &kp PG_UP   &kp END
    &kp N1    &key_repeat  &kp SPACE    &kp SEMI      &kp N2                  &kp N3        &kp MINUS  &kp BSPC   &star_excl  &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        wen_num_layer {
// WEN_NUM, KP_DOT would be better here instad of DOT, but num lock state interferes with KP_DOT.
            bindings = <
    &kp EQUAL  &kp N9       &kp N8  &kp N7    &kp FSLH           &none   &none      &none     &none       &none
    &kp DOT    &kp N6       &kp N5  &kp N4    &kp MINUS          &none   &kp COMMA  &none     &none       &none
    &kp PLUS   &kp N3       &kp N2  &kp N1    &kp STAR           &none   &none      &none     &none       &none
    &kp N1     &key_repeat  &kp N0  &kp SEMI  &kp N2             &kp N3  &kp MINUS  &kp BSPC  &star_excl  &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };
        
        wen_sym_layer {
// WEN_SYM
            bindings = <
    &kp SQT    &kp LT       &kp GT     &kp DQT    &kp DOT            &kp AMPS   &m_scope   &kp LBKT  &kp RBKT    &kp PRCNT
    &kp EXCL   &kp MINUS    &kp PLUS   &kp EQUAL  &kp HASH           &kp PIPE   &kp COLON  &kp LPAR  &kp RPAR    &kp QMARK
    &kp CARET  &kp FSLH     &kp STAR   &kp BSLH   &m_par_dir         &kp TILDE  &kp DLLR   &kp LBRC  &kp RBRC    &kp AT
    &kp N1     &key_repeat  &kp SPACE  &kp SEMI   &kp N2             &kp N3     &kp MINUS  &kp BSPC  &star_excl  &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        wen_func_layer {
// WEN_FUNC
            bindings = <
    &kp F12  &kp F9       &kp F8     &kp F7    &kp PSCRN                &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI
    &kp F11  &kp F6       &kp F5     &kp F4    &kp SLCK                 &kp EP_TOG       &kp C_PREV       &kp C_VOL_DN     &kp C_VOL_UP     &kp C_NEXT
    &kp F10  &kp F3       &kp F2     &kp F1    &kp PAUSE_BREAK          &out OUT_TOG     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3
    &kp N1   &key_repeat  &kp SPACE  &kp SEMI  &kp N2                   &kp N3           &kp MINUS        &kp BSPC         &star_excl       &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        wen_acute_layer {
// ACUTE LAYER
            bindings = <
    &to WEN_BASE     &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &u_acute_to_wen  &to WEN_BASE     &to WEN_BASE
    &a_acute_to_wen  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &e_acute_to_wen  &i_acute_to_wen  &o_acute_to_wen
    &to WEN_BASE     &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &to WEN_BASE     &to WEN_BASE     &to WEN_BASE
    &to WEN_BASE     &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &to WEN_BASE     &to WEN_BASE     &to WEN_BASE
          >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        dacute_wen_layer {
// DOUBLE ACUTE LAYER
            bindings = <
    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &u_dacute_to_wen  &to WEN_BASE  &to WEN_BASE
    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &m_excl_wen   &m_semi_wen       &m_at_wen     &o_dacute_to_wen
    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &to WEN_BASE      &to WEN_BASE  &to WEN_BASE
    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &to WEN_BASE      &to WEN_BASE  &to WEN_BASE
          >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        diaresis_layer {
// DIARESIS LAYER
            bindings = <
    &to WEN_BASE    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &u_diaresis_to_wen  &to WEN_BASE  &to WEN_BASE
    &to WEN_BASE    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &m_under_wen  &to WEN_BASE        &m_grave_wen  &o_diaresis_to_wen
    &to WEN_BASE    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &to WEN_BASE        &to WEN_BASE  &to WEN_BASE
    &to WEN_BASE    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &to WEN_BASE        &to WEN_BASE  &to WEN_BASE
          >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        taipo_layer {
// TAIPO LAYER
            bindings = <
    &none    &none  &none  &none  &none           &none  &none  &none  &none  &none
    &none    &none  &none  &none  &none           &none  &none  &none  &none  &none
    &none    &none  &none  &none  &none           &none  &none  &none  &none  &none
    &none    &none  &none  &none  &none           &none  &none  &none  &none  &none
          >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };



    };
};

