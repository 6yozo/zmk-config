/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#include "acutes.h"
#include "layers.h"

/ {
    behaviors {
      skq: sticky_key_quick_release {
        compatible = "zmk,behavior-sticky-key";
        label = "STICKY_KEY_QUICK_RELEASE";
        #binding-cells = <1>;
        bindings = <&kp>;
        release-after-ms = <1000>;
        quick-release;
        ignore-modifiers;
      };
    };

    combos {
        compatible = "zmk,combos";
        combo_shft_right {
            timeout-ms = <50>;
            key-positions = <37 16>;
            bindings = <&skq LSHFT>;
        };
        combo_shft_left {
            timeout-ms = <50>;
            key-positions = <32 13>;
            bindings = <&skq LSHFT>;
        };
        combo_ctrl_right {
            timeout-ms = <50>;
            key-positions = <37 17>;
            bindings = <&skq LCTRL>;
        };
        combo_ctrl_left {
            timeout-ms = <50>;
            key-positions = <32 12>;
            bindings = <&skq LCTRL>;
        };
        combo_alt_right {
            timeout-ms = <50>;
            key-positions = <37 18>;
            bindings = <&skq LALT>;
        };
        combo_alt_left {
            timeout-ms = <50>;
            key-positions = <32 11>;
            bindings = <&skq LALT>;
        };
        combo_gui_right {
            timeout-ms = <50>;
            key-positions = <37 19>;
            bindings = <&skq LGUI>;
        };
        combo_gui_left {
            timeout-ms = <50>;
            key-positions = <32 10>;
            bindings = <&skq LGUI>;
        };

       combo_to_wen_diaresis_right {
            timeout-ms = <50>;
            key-positions = <38 16>;
            bindings = <&to WEN_DL>;
        };
        combo_to_wen_diaresis_left {
            timeout-ms = <50>;
            key-positions = <31 13>;
            bindings = <&to WEN_DL>;
        };
        combo_to_wen_acute_right {
            timeout-ms = <50>;
            key-positions = <38 17>;
            bindings = <&to WEN_AL>;
        };
        combo_to_wen_acute_left {
            timeout-ms = <50>;
            key-positions = <31 12>;
            bindings = <&to WEN_AL>;
        };
        combo_to_wen_dacute_right {
            timeout-ms = <50>;
            key-positions = <38 18>;
            bindings = <&to WEN_DAL>;
        };
        combo_to_wen_dacute_left {
            timeout-ms = <50>;
            key-positions = <31 11>;
            bindings = <&to WEN_DAL>;
        };

        combo_to_wen_base {
            timeout-ms = <50>;
            key-positions = <37 26>;
            bindings = <&to WEN_BASE>;
        };
        combo_to_wen_nav {
            timeout-ms = <50>;
            key-positions = <32 23>;
            bindings = <&to WEN_NAV>;
        };
        combo_to_wen_num {
            timeout-ms = <50>;
            key-positions = <37 27>;
            bindings = <&to WEN_NUM>;
        };
        combo_to_wen_sym {
            timeout-ms = <50>;
            key-positions = <32 22>;
            bindings = <&to WEN_SYM>;
        };
        combo_to_wen_func {
            timeout-ms = <50>;
            key-positions = <37 28>;
            bindings = <&to WEN_FUNC>;
        };
        combo_to_wen_media {
            timeout-ms = <50>;
            key-positions = <32 21>;
            bindings = <&to WEN_MEDIA>;
        };
        combo_to_whu_base {
            timeout-ms = <50>;
            key-positions = <37 29>;
            bindings = <&to WHU_BASE>;
        };
        combo_to_mhu_base {
            timeout-ms = <50>;
            key-positions = <32 20>;
            bindings = <&to MHU_BASE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        wen_base_layer {
// COLEMAK-DH
            bindings = <
    &kp SQT   &kp W    &kp F      &kp P    &kp B           &kp J   &kp L    &kp U      &kp Y    &kp Q
    &kp A     &kp R    &kp S      &kp T    &kp G           &kp M   &kp N    &kp E      &kp I    &kp O
    &kp FSLH  &kp DOT  &kp C      &kp D    &kp V           &kp K   &kp H    &kp COMMA  &kp X    &kp Z
    &kp N1    &kp ESC  &kp SPACE  &kp TAB  &kp N2          &kp N3  &kp RET  &kp BSPC   &kp DEL  &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        wen_nav_layer {
// WEN_NAV
            bindings = <
    &none     &none       &kp K_APP    &none         &kp KP_NUMLOCK          &kp INS       &none     &none      &none      &none
    &kp LGUI  &kp LALT    &kp LCTRL    &kp LSHFT     &caps_word              &kp CAPS      &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT
    &m_undo   &m_cut_wen  &m_copy_wen  &m_paste_wen  &m_again_wen            &kp LC(BSPC)  &kp HOME  &kp PG_DN  &kp PG_UP  &kp END
    &kp N1    &kp ESC     &kp SPACE    &kp TAB       &kp N2                  &kp N3        &kp RET   &kp BSPC   &kp DEL    &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        wen_num_layer {
// WEN_NUM, KP_DOT would be better here instad of DOT, but num lock state interferes with KP_DOT.
            bindings = <
    &kp EQUAL  &kp N9   &kp N8  &kp N7   &kp FSLH           &none   &none      &none     &none    &none
    &kp DOT    &kp N6   &kp N5  &kp N4   &kp MINUS          &none   &kp COMMA  &none     &none    &none
    &kp PLUS   &kp N3   &kp N2  &kp N1   &kp STAR           &none   &none      &none     &none    &none
    &kp N1     &kp ESC  &kp N0  &kp TAB  &kp N2             &kp N3  &kp RET    &kp BSPC  &kp DEL  &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };
        
        wen_sym_layer {
// WEN_SYM
            bindings = <
    &kp SQT    &kp LT     &kp GT     &kp DQT    &kp DOT            &kp AMPS   &m_scope   &kp LBKT  &kp RBKT  &kp PRCNT
    &kp EXCL   &kp MINUS  &kp PLUS   &kp EQUAL  &kp HASH           &kp PIPE   &kp COLON  &kp LPAR  &kp RPAR  &kp QMARK
    &kp CARET  &kp FSLH   &kp STAR   &kp BSLH   &m_par_dir         &kp TILDE  &kp DLLR   &kp LBRC  &kp RBRC  &kp AT
    &kp N1     &kp ESC    &kp SPACE  &kp TAB    &kp N2             &kp N3     &kp RET    &kp BSPC  &kp DEL   &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        wen_fun_layer {
// WEN_FUNC
            bindings = <
    &kp F12  &kp F9   &kp F8     &kp F7   &kp PSCRN                &none   &none    &none     &none    &none
    &kp F11  &kp F6   &kp F5     &kp F4   &kp SLCK                 &none   &none    &none     &none    &none
    &kp F10  &kp F3   &kp F2     &kp F1   &kp PAUSE_BREAK          &none   &none    &none     &none    &none
    &kp N1   &kp ESC  &kp SPACE  &kp TAB  &kp N2                   &kp N3  &kp RET  &kp BSPC  &kp DEL  &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        wen_media_layer {
// WEN_MEDIA
            bindings = <
    &none   &none    &none      &none    &none           &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI
    &none   &none    &none      &none    &none           &kp EP_TOG       &kp C_PREV       &kp C_VOL_DN     &kp C_VOL_UP     &kp C_NEXT
    &none   &none    &none      &none    &none           &out OUT_TOG     &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3
    &kp N1  &kp ESC  &kp SPACE  &kp TAB  &kp N2          &kp N3           &kp C_STOP       &kp C_MUTE       &kp C_PP         &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        wen_acute_layer {
// ACUTE LAYER
            bindings = <
    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &u_acute_wen  &to WEN_BASE  &to WEN_BASE
    &a_acute_wen  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &e_acute_wen  &i_acute_wen  &o_acute_wen
    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE
    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE
          >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        dacute_wen_layer {
// DOUBLE ACUTE LAYER
            bindings = <
    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &u_dacute_wen  &to WEN_BASE  &to WEN_BASE
    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &m_excl_wen   &m_semi_wen    &m_at_wen     &o_dacute_wen
    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &to WEN_BASE   &to WEN_BASE  &to WEN_BASE
    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &to WEN_BASE   &to WEN_BASE  &to WEN_BASE
          >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        diaresis_layer {
// DIARESIS LAYER
            bindings = <
    &to WEN_BASE    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &u_diaresis_wen  &to WEN_BASE  &to WEN_BASE
    &to WEN_BASE    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &m_under_wen  &to WEN_BASE     &m_grave_wen  &o_diaresis_wen
    &to WEN_BASE    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &to WEN_BASE     &to WEN_BASE  &to WEN_BASE
    &to WEN_BASE    &to WEN_BASE  &to WEN_BASE  &to WEN_BASE  &to WEN_BASE           &to WEN_BASE  &to WEN_BASE  &to WEN_BASE     &to WEN_BASE  &to WEN_BASE
          >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

    };
};

