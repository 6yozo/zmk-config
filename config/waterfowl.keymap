/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// 0: COLEMAK-DH
            bindings = <
    &kp Q           &kp W       &kp F        &kp P        &kp B           &kp J   &kp L        &kp U        &kp Y         &kp SQT
    &mt LGUI A      &mt LALT R  &mt LCTRL S  &mt LSHFT T  &kp G           &kp M   &mt LSHFT N  &mt LCTRL E  &mt LALT I    &mt LGUI O
    &kp Z           &mt RALT X  &kp C        &kp D        &kp V           &kp K   &kp H        &kp COMMA    &mt RALT DOT  &kp SLASH
    &kp N1          &kp ESC     &lt 1 SPACE  &kp TAB      &kp N2          &kp N3  &lt 3 RET    &lt 2 BSPC   &lt 4 DEL     &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        navigation_layer {
/* 1: NAV
 * Bootloader does not work on the peripherial side of the split keyboard only on the central side.
 * The reset button can be used to go into bootloader mode instead.
 */
            bindings = <
    &none     &none     &none      &none      &none               &kp K_AGAIN  &kp K_PASTE  &kp K_COPY  &kp K_CUT  &kp K_UNDO
    &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &caps_word          &kp CAPS     &kp LEFT     &kp DOWN    &kp UP     &kp RIGHT
    &none     &kp RALT  &none      &none      &none               &kp INS      &kp HOME     &kp PG_DN   &kp PG_UP  &kp END
    &kp N1    &none     &none      &none      &kp N2              &kp N3       &kp RET      &kp BSPC    &kp DEL    &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        number_layer {
// 2: NUM
            bindings = <
    &kp LBKT   &kp N7   &kp N8  &kp N9     &kp RBKT           &none   &none      &none      &none     &none
    &kp SEMI   &kp N4   &kp N5  &kp N6     &kp EQUAL          &none   &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI
    &kp GRAVE  &kp N1   &kp N2  &kp N3     &kp BSLH           &none   &none      &none      &kp RALT  &none
    &kp N1     &kp DOT  &kp N0  &kp MINUS  &kp N2             &kp N3  &none      &none      &none     &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        symbol_layer {
// 3: SYM
            bindings = <
    &kp LBRC   &kp AMPS  &kp ASTRK  &kp LPAR   &kp RBRC           &none   &none      &none      &none     &none
    &kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS           &none   &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI
    &kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE           &none   &none      &none      &kp RALT  &none
    &kp N1     &kp LPAR  &kp RPAR   &kp UNDER  &kp N2             &kp N3  &none      &none      &none    &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

        function_layer {
// 4: FUNC
            bindings = <
    &kp F12  &kp F7     &kp F8     &kp F9   &kp PSCRN                &none   &none      &none      &none     &none
    &kp F11  &kp F4     &kp F5     &kp F6   &kp SLCK                 &none   &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI
    &kp F10  &kp F1     &kp F2     &kp F3   &kp PAUSE_BREAK          &none   &none      &none      &kp RALT  &none
    &kp N1   &kp K_APP  &kp SPACE  &kp TAB  &kp N2                   &kp N3  &none      &none      &none     &kp N4
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp TAB LS(TAB)>;
        };

    };
};